class Solution:
    def backspaceCompare(self, s: str, t: str) -> bool:
        
        def helper(s):
            stack = deque([])
            for i in range(len(s)):
                if s[i] == '#':
                    if stack:
                        stack.pop()
                else:
                    stack.append(s[i])
            return ''.join(stack)
        
        return helper(s) == helper(t)



class Solution:
    def backspaceCompare(self, s: str, t: str) -> bool:
        i = len(s) - 1
        j = len(t) - 1
        while i >= 0 and j >= 0:
            if s[i] != '#' and t[j] != '#':
                if s[i] != t[j]:
                    return False
                i -= 1
                j -= 1
                continue
            if s[i] == '#':
                cnt = 1
                i -= 1
                while i >= 0 and cnt > 0:
                    if s[i] == '#':
                        cnt += 1
                    else:
                        cnt -= 1
                    i -= 1
            
                
            if t[j] == '#':
                cnt = 1
                j -= 1
                while j >= 0 and cnt > 0:
                    if t[j] == '#':
                        cnt += 1
                    else:
                        cnt -= 1
                    j -= 1
            
        while i >= 0:
            if s[i] != '#':
                return False
            cnt = 1
            i -= 1
            while i >= 0 and cnt > 0:
                if s[i] == '#':
                    cnt += 1
                else:
                    cnt -= 1
                i -= 1 
        while j >= 0:
            if t[j] != '#':
                return False
            cnt = 1
            j -= 1
            while j >= 0 and cnt > 0:
                if t[j] == '#':
                    cnt += 1
                else:
                    cnt -= 1
                j -= 1

        return True

            
