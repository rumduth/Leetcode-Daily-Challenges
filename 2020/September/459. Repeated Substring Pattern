class Solution:
    def repeatedSubstringPattern(self, s: str) -> bool:
        n = len(s)
        if n == 1:
            return False
        for i in range(1, n // 2 + 1):
            if n % i == 0:
                substring = s[:i]
                k = n // i
                if substring * k == s:
                    return True
        return False


class Solution:
    def repeatedSubstringPattern(self, s: str) -> bool:
        n = len(s)
        if n == 1:
            return False
        for i in range(1, n // 2 + 1):
            if n % i == 0:
                substring = s[:i]
                if substring + s == s + substring:
                    return True
        return False


class Solution:
    def repeatedSubstringPattern(self, s: str) -> bool:
        n = len(s)
        return (s + s).index(s,1) < n
        
