224. Basic Calculator

class Solution:
    def calculate(self, s: str) -> int:
        sign = 1
        current_res = 0
        i = 0
        stack = []
        while i < len(s):
            if s[i] == '-':
                sign = -1
            elif s[i].isdigit():
                number = 0
                j = i
                while j < len(s) and s[j].isdigit():
                    number = number * 10 + ord(s[j]) - ord('0')
                    j += 1
                current_res = current_res + number * sign
                i = j - 1
                sign = 1
            elif s[i] == '(':
                stack.append((current_res, sign))
                current_res = 0
                sign = 1
            elif s[i] == ')':
                prev_res, prev_sign = stack.pop()
                current_res = prev_res + prev_sign * current_res
            
            i += 1
        return current_res


227. Basic Calculator II
class Solution:
    def calculate(self, s: str) -> int:
        stack = []
        sign = 1
        i = 0
        while i < len(s):
            if s[i].isdigit():
                j = i
                number = 0
                while j < len(s) and s[j].isdigit():
                    number = number * 10 + ord(s[j]) - ord('0')
                    j += 1
                i = j - 1
                stack.append((sign,number))
                sign = 1
            elif s[i] == '-':
                sign = -1
            elif s[i] == '*':
                prev_sign, prev_number = stack.pop()
                j = i + 1
                number = 0
                while j < len(s) and s[j].isdigit():
                    number = number * 10 + ord(s[j]) - ord('0')
                    j += 1
                i = j - 1
                prev_number = prev_number * number
                stack.append((prev_sign,prev_number))
                sign = 1
            elif s[i] == '/':
                prev_sign, prev_number = stack.pop()
                j = i + 1
                number = 0
                while j < len(s) and (s[j].isdigit() or s[j] == ' '):
                    if s[j] == ' ':
                        j += 1
                    else:
                        number = number * 10 + ord(s[j]) - ord('0')
                        j += 1
                i = j - 1
                prev_number = prev_number // number
                stack.append((prev_sign,prev_number))
                sign = 1
            i += 1
        res = 0
        for sign, num in stack:
            res += (sign) * num
        return res

            
