class Solution:
    def maxSubarraySumCircular(self, nums: List[int]) -> int:
        
        if (all(num < 0 for num in nums)):
            return max(nums)
        
        if(all(num > 0 for num in nums)):
            return sum(nums)
        # 2 cases: the max array is in the middle, or the max subarray in the end

        #case 1 -> finding the max in the middle
        max1 = 0
        acc1 = 0
        for num in nums:
            acc1 += num
            max1 = max(acc1, max1)
            if acc1 < 0:
                acc1 = 0
        
        #case 2 -> findng the max in the ends -> the min will be in the middle
        min1 = float('inf')
        acc1 = 0
        for num in nums:
            acc1 += num
            min1 = min(min1, acc1)
            if acc1 > 0:
                acc1 = 0
        
        total_sum = sum(x for x in nums)
        
       
        return max(total_sum - min1, max1)
