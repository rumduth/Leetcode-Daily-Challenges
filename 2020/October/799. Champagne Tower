class Solution:
    def champagneTower(self, poured: int, query_row: int, query_glass: int) -> float:
        dp = [[0] * (i + 1) for i in range(query_row+1)]
        dp[0][0] = poured
        for i in range(1,query_row + 1):
            for j in range(len(dp[i])):
                if j == 0:
                    if dp[i-1][j] > 1:
                        dp[i][j] = (dp[i-1][j] - 1) / 2
                elif j == len(dp[i]) - 1:
                    if dp[i-1][j-1] > 1:
                        dp[i][j] = (dp[i-1][j-1] - 1) / 2
                else:
                    if dp[i-1][j] > 1:
                        dp[i][j] += (dp[i-1][j] - 1) / 2
                    if dp[i-1][j-1] > 1:
                        dp[i][j] += (dp[i-1][j-1] - 1) / 2


        return 1 if dp[query_row][query_glass] >= 1 else dp[query_row][query_glass] if dp[query_row][query_glass] >= 0 else 0
        
