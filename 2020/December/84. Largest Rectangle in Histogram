class Solution {
public:
    int largestRectangleArea(vector<int>& heights) {
        int n = heights.size();
        vector<int> left(n,0);
        vector<int> right(n,0);
        stack<int> stack;
        for(int i = 0; i < n; i++){
            while(!stack.empty() && heights[stack.top()] >= heights[i])
                stack.pop();
            if(stack.empty()) left[i] = -1;
            else left[i] = stack.top();
            stack.push(i);
        }
        while(!stack.empty()) stack.pop();
        for(int i = n - 1; i >= 0; i--){
            while(!stack.empty() && heights[stack.top()] >= heights[i])
                stack.pop();
            if(stack.empty()) right[i] = n;
            else right[i] = stack.top();
            stack.push(i);
        }
        int max_area = 0;
        for(int i = 0; i < n; i++){
            int width = right[i] - left[i] - 1;
            max_area = max(max_area, width * heights[i]);
        }
        return max_area;
    }
};
