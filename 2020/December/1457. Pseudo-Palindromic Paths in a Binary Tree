/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number}
 */
var pseudoPalindromicPaths  = function(root) {
    let odd = 0;
    let cache = {};
    let res = 0;
    function dfs(root){
        if(!root)
            return;
        
        if(!(root.val in cache))
            cache[root.val] = 0;

        cache[root.val] += 1;
        odd += (cache[root.val] % 2 === 1) ? 1 : -1;
        if(!root.left && !root.right){
            if(odd <= 1) res += 1;
        }

        dfs(root.left);
        dfs(root.right);

        cache[root.val] -= 1;
        odd += (cache[root.val] % 2 === 1) ? 1 : -1;
    }
    dfs(root)
    return res;
};
