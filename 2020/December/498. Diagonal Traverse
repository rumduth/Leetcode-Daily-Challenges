/**
 * @param {number[][]} mat
 * @return {number[]}
 */
var findDiagonalOrder = function(mat) {
    let m = mat.length, n = mat[0].length;
    let res = [];

    // Base case
    if(m === 1 || n === 1){
        for(let i = 0; i < m; i++){
            for(let j = 0; j < n; j++)
                res.push(mat[i][j]);
        }
        return res;
    }

    let r = 0, c = 0, total = m * n, index = 0;
    let directions = [[-1,1],[1,-1]];

    while(res.length < total){
        res.push(mat[r][c]);
        if(res.length === total)
            return res;
        if((r === 0 || c === n - 1) && index == 0){
            index = 1;
            c += 1;
            if(c >= n){
                r += 1;
                c = n - 1;
            }
        }else if((r === m - 1 || c === 0) && index == 1){
            index = 0;
            r += 1;
            if(r >= m){
                c += 1;
                r = m - 1;
            }
        }else{
            r += directions[index][0];
            c += directions[index][1];
        }
    }
    return res;
};
