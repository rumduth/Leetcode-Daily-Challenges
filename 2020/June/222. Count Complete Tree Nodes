# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def countNodes(self, root: Optional[TreeNode]) -> int:
        res = 0
        def leftHeight(root):
            if root is None:
                return 0
            return 1 + leftHeight(root.left)
        def rightHeight(root):
            if root is None:
                return 0
            return 1 + rightHeight(root.right)
        res = 0
        def dfs(root):
            nonlocal res
            if root is None:
                return 0
            left_height = leftHeight(root)
            right_height = rightHeight(root)
            if left_height == right_height:
                return pow(2,left_height) - 1
            return 1 + dfs(root.left) + dfs(root.right)
        
        return dfs(root)
            

        
            
