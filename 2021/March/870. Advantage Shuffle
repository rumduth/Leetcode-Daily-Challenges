class Solution {
public:
    vector<int> advantageCount(vector<int>& nums1, vector<int>& nums2) {
        int n = nums1.size();
        sort(nums1.begin(),nums1.end());
        vector<pair<int,int>> nums2_index;
        for(int i = 0; i < nums2.size(); i++){
            nums2_index.push_back({nums2[i],i});
        }
        queue<int> q;
        sort(nums2_index.begin(),nums2_index.end());
        vector<int> res(n,-1);
        int i = 0;
        int j = 0;
        while(i < n && j < n){
            if(nums1[i] > nums2_index[j].first){
                res[nums2_index[j].second] = nums1[i];
                i += 1;
                j += 1;
            }else{
                q.push(i);
                i += 1;
            }
        }
        for(int i = 0; i < n; i++){
            if(res[i] == -1){
                res[i] = nums1[q.front()];
                q.pop();
            }
        }
        return res;

    }
};

