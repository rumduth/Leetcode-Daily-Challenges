class Solution {
public:
    string originalDigits(string s) {
        vector<int> dp(26,0);
        for(auto c: s) dp[c - 'a'] += 1;
        unordered_map<char, int> count;
        count['0'] = dp['z'-'a'];
        count['2'] = dp['w'-'a'];
        count['4'] = dp['u'-'a'];
        count['5'] = dp['f'-'a'] - count['4'];
        count['7'] = dp['v'-'a'] - count['5'];
        count['8'] = dp['g'-'a'];
        count['6'] = dp['x'-'a'];
        count['3'] = dp['r'-'a'] - count['0'] - count['4'];
        count['1'] = dp['o'-'a'] - count['0'] - count['2'] - count['4'];
        count['9'] = dp['i'-'a'] - count['5'] - count['6'] - count['8'];
        string res = "";
        for(char c = '0'; c <= '9'; c++){
            for(int i = 0; i < count[c]; i++) res.push_back(c);
        }
        return res;

    }
};
