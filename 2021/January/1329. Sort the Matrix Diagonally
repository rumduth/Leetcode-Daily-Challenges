class Solution {
public:
    void helper(int r, int c, vector<vector<int>>& mat){
        int copy_r = r;
        int copy_c = c;
        int m = mat.size();
        int n = mat[0].size();
        vector<int> arr;
        while(r < m && c < n) arr.push_back(mat[r++][c++]);
        sort(arr.begin(),arr.end());
        int i = 0;
        while(copy_r < m && copy_c < n) mat[copy_r++][copy_c++] = arr[i++];
    
    }

    
    vector<vector<int>> diagonalSort(vector<vector<int>>& mat) {
        int m = mat.size();
        int n = mat[0].size();
        for(int c = 0; c < n; c++)
            helper(0,c,mat);
        for(int r = 1; r < m; r++)
            helper(r,0, mat);
        return mat;

    }
};
