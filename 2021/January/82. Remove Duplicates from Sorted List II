/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        if(!head || !head->next) return head;
        ListNode* dummy = new ListNode(-101);
        dummy->next = head;
        ListNode* prev_valid_node = dummy;
        ListNode* prev = dummy;
        ListNode* current = head;
        while(current){
            if(current->val == prev->val){
                while(current && current->val == prev->val) current = current->next;
                prev = current;
            }else{
                prev_valid_node->next = prev;
                prev_valid_node = prev_valid_node->next;
                prev = current;
            }
            if(current) current = current->next;
        }
        prev_valid_node->next = prev;
        return dummy->next;
    }
};
