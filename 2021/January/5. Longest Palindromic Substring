class Solution {
public:
    string longestPalindrome(string s) {
        if(s.length() <= 1) return s;
        int maxLen = 1;
        int start = 0;
        int n = s.length();
        vector<vector<bool>> dp(n, vector<bool>(n, false));
        for(int i = 0; i < n; i++) dp[i][i] = true;

        for(int len = 2; len <= n; len++){
            for(int left = 0; left + len <= n; left++){
                int right = left + len - 1;
                if(s[left] == s[right]){
                    if(len == 2 || dp[left+1][right-1]) dp[left][right] = true;
                }
                if(dp[left][right]){
                    maxLen = len;
                    start = left;
                }

            }
        }
        return s.substr(start,maxLen);
        
    }
};
