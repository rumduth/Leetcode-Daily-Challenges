class Solution {
public:
    int minOperations(vector<int>& nums, int x) {
        int total_sum = accumulate(nums.begin(), nums.end(),0);
        int target = total_sum - x;
        if(target == 0) return nums.size();
        unordered_map<int, int> track;
        track[0] = -1;
        int current_sum = 0;
        int res = 0;
        for(int i = 0; i < nums.size(); i++){
            current_sum += nums[i];
            if(track.count(current_sum - target)) res = max(res, i - track[current_sum - target]);
            if(!track.count(current_sum)) track[current_sum] = i;
        }
        if(!res) return -1;
        return nums.size() - res;
    }
};
