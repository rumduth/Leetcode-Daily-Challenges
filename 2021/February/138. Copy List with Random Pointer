/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
private:
    unordered_map<Node*, Node*> copy;
public:
    Node* copyRandomList(Node* head) {
        if(!head) return nullptr;
        if(copy.count(head)){
            return copy[head];
        }
        Node* newNode = new Node(head->val);
        copy[head] = newNode; 
        newNode->random = copyRandomList(head->random);
        newNode->next = copyRandomList(head->next);
        return newNode;
    }
};
